{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","helpers/sortQuotes.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","btn","sortQuotes","quotes","ascending","sort","quoteA","quoteB","QuoteList","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","styles","sorting","onClick","push","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,IAAM,yB,mBCAvDD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCmBdC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMC,GAAE,kBAAaN,EAAMO,IAAMN,UAAWC,IAAQM,IAApD,iCCHSC,EAVI,SAACC,EAAQC,GACxB,OAAOD,EAAOE,MAAK,SAACC,EAAQC,GACxB,OAAIH,EACOE,EAAON,GAAKO,EAAOP,GAAK,GAAK,EAE7BM,EAAON,GAAKO,EAAOP,GAAK,GAAK,M,iBCwCjCQ,EAtCG,SAACf,GACjB,IAAMgB,EAAUC,cACVC,EAAWC,cAIXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAErCC,EAAef,EAAWT,EAAMU,OAAQU,GAS9C,OACE,eAAC,WAAD,WACE,qBAAKnB,UAAWwB,IAAOC,QAAvB,SACE,yBAAQC,QAVe,WAC3BX,EAAQY,KAAK,CACXC,SAAUX,EAASW,SACnBP,OAAO,SAAD,OAAYF,EAAqB,OAAS,UAO9C,kBACQA,EAAqB,aAAe,iBAG9C,oBAAInB,UAAWwB,IAAOK,KAAtB,SACGN,EAAaO,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEzB,GAAIyB,EAAMzB,GACVF,OAAQ2B,EAAM3B,OACdD,KAAM4B,EAAM5B,MAHP4B,EAAMzB,a,yBCnBR0B,EAXO,WACpB,OACE,sBAAKhC,UAAWC,IAAQgC,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMjC,UAAU,MAAMK,GAAG,aAAzB,6B,gBC+BS6B,UA9Bf,WACI,MAA2DC,YAAQC,KAAc,GAAzEC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAcC,EAAnC,EAA6BC,KAAoBC,EAAjD,EAAiDA,MAMjD,OAJAC,qBAAU,WACNL,MACD,CAACA,IAEW,YAAXC,EACO,qBAAKtC,UAAU,WAAf,SACH,cAAC2C,EAAA,EAAD,MAIJF,EACO,qBAAKzC,UAAU,mBAAf,SACFyC,IAIM,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAKzD,8BACI,cAAC,EAAD,CAAWnC,OAAQ8B,MALhB,cAAC,EAAD","file":"static/js/5.65ecf3b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2ApeM\",\"btn\":\"QuoteItem_btn__28oqO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__34FSE\",\"sorting\":\"QuoteList_sorting__3y9pY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2q_C0\"};","import classes from './QuoteItem.module.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst QuoteItem = (props) => {\r\n  return (\r\n    <li className={classes.item}>\r\n      <figure>\r\n        <blockquote>\r\n          <p>{props.text}</p>\r\n        </blockquote>\r\n        <figcaption>{props.author}</figcaption>\r\n      </figure>\r\n      <Link to={`/quotes/${props.id}`} className={classes.btn}>\r\n        View Fullscreen\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default QuoteItem;\r\n","const sortQuotes = (quotes, ascending) => {\r\n    return quotes.sort((quoteA, quoteB) => {\r\n        if (ascending) {\r\n            return quoteA.id > quoteB.id ? 1 : -1;\r\n        } else {\r\n            return quoteA.id < quoteB.id ? 1 : -1;\r\n        }\r\n    });\r\n};\r\n\r\nexport default sortQuotes;","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport sortQuotes from '../../helpers/sortQuotes';\n\nimport styles from './QuoteList.module.css';\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending)\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\n    })\n  };\n\n  return (\n    <Fragment>\n      <div className={styles.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}\n        </button>\n      </div>\n      <ul className={styles.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\n\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react';\r\n\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\n\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\n\r\nfunction AllQuotes() {\r\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true);\r\n\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, [sendRequest])\r\n\r\n    if (status === 'pending') {\r\n        return <div className=\"centered\">\r\n            <LoadingSpinner />\r\n        </div>\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"centered focused\">\r\n            {error}\r\n        </div>\r\n    }\r\n\r\n    if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n        return <NoQuotesFound />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <QuoteList quotes={loadedQuotes} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllQuotes"],"sourceRoot":""}