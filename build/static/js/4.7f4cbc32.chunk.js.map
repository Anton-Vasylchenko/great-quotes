{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","NewCommentForm","props","useState","enteredComment","setEnteredComment","useHttp","addComment","sendRequest","status","error","onAddedComment","quoteId","useEffect","submitFormHandler","event","preventDefault","trim","length","commentData","text","isButtonDisabled","className","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","onChange","target","value","actions","disabled","CommentItem","item","CommentsList","comments","map","comment","Comments","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","onClick","HighlightedQuote","quote","author","QuoteDetail","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","to","url"],"mappings":"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","file":"static/js/4.7f4cbc32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2dN-q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__AupSP\",\"loading\":\"NewCommentForm_loading__1DUgt\",\"control\":\"NewCommentForm_control__1-4n6\",\"actions\":\"NewCommentForm_actions__3DJoE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__ireKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__dk2Df\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__2-nu7\"};","import { useEffect, useState } from 'react';\r\n\r\nimport useHttp from '../../hooks/use-http';\r\nimport { addComment } from '../../lib/api';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\n\r\nimport classes from './NewCommentForm.module.css';\r\n\r\nconst NewCommentForm = (props) => {\r\n  const [enteredComment, setEnteredComment] = useState('');\r\n\r\n  const { sendRequest, status, error } = useHttp(addComment);\r\n\r\n  const { onAddedComment, quoteId } = props;\r\n\r\n  useEffect(() => {\r\n    if (status === 'completed' && !error) {\r\n      onAddedComment();\r\n    }\r\n  }, [status, error, onAddedComment])\r\n\r\n  const submitFormHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (enteredComment.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    sendRequest({ commentData: { text: enteredComment }, quoteId });\r\n  };\r\n\r\n  const onChangeCommentHandler = (event) => {\r\n    setEnteredComment(event.target.value)\r\n  }\r\n\r\n  const isButtonDisabled = enteredComment.trim().length === 0;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={submitFormHandler}>\r\n      {status === 'pending' &&\r\n        <div className=\"centered\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      }\r\n      <div className={classes.control} onSubmit={submitFormHandler}>\r\n        <label htmlFor='comment'>Your Comment</label>\r\n        <textarea\r\n          id='comment'\r\n          rows='5'\r\n          onChange={onChangeCommentHandler}\r\n          value={enteredComment}\r\n        ></textarea>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button\r\n          disabled={isButtonDisabled}\r\n          className={isButtonDisabled ? 'btn--disabled' : 'btn'}>\r\n          Add Comment\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewCommentForm;\r\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList'\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { quoteId } = useParams();\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n    setIsAddingComment(false);\n  }, [quoteId, sendRequest]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = <div className=\"centered\">\n      <LoadingSpinner />\n    </div>\n  }\n\n  if (status === 'completed' && loadedComments) {\n    comments = <CommentsList comments={loadedComments} />\n  }\n\n  if (status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)) {\n    comments = <div className=\"centered\">No comments were added yet!</div>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment &&\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useEffect } from 'react';\r\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuotes from '../components/quotes/HighlightedQuote'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\n\r\nfunction QuoteDetail() {\r\n    const { quoteId } = useParams();\r\n    const match = useRouteMatch();\r\n\r\n    const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\r\n\r\n    useEffect(() => {\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId])\r\n\r\n    if (status === 'pending') {\r\n        return <div className=\"centered\">\r\n            <LoadingSpinner />\r\n        </div>\r\n    }\r\n\r\n    if (error) {\r\n        return <p className=\"centered\">{error}</p>\r\n    }\r\n\r\n    if (!loadedQuote.text) {\r\n        return <p>No quote found!</p>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <HighlightedQuotes\r\n                text={loadedQuote.text}\r\n                author={loadedQuote.author}\r\n            />\r\n\r\n            <Route path={`${match.path}`} exact>\r\n                <div className=\"centered\">\r\n                    <Link\r\n                        className=\"btn--flat\"\r\n                        to={`${match.url}/comments`}>\r\n                        Load Comments\r\n                    </Link>\r\n                </div>\r\n            </Route>\r\n\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments />\r\n            </Route>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuoteDetail"],"sourceRoot":""}