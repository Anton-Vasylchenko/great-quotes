{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntering","enteredAuthor","setEnteredAuthor","enteredText","setEnteredText","authorInput","textInput","errors","setErrors","console","log","when","message","location","form","onSubmit","event","preventDefault","trim","length","onAddQuote","author","text","prevState","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","value","onChange","target","rows","actions","NewQuote","history","useHistory","useHttp","addQuote","sendRequest","status","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,iGCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBC0F/BC,EAtFG,SAACL,GACjB,MAAoCM,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA4BN,mBAAS,CACnCO,aAAa,EACbC,WAAW,IAFb,mBAAOC,EAAP,KAAeC,EAAf,KAKAC,QAAQC,IAAIH,GA8BZ,OACE,qCACE,cAAC,IAAD,CACEI,KAAMZ,EACNa,QAAS,SAACC,GAAD,8EAIX,cAAC,EAAD,UACE,uBACEpB,UAAWC,IAAQoB,KAAMC,SAtCjC,SAA2BC,GACzBA,EAAMC,iBAE8B,IAAhChB,EAAciB,OAAOC,OAKS,IAA9BhB,EAAYe,OAAOC,QAKvBnB,GAAc,GACdR,EAAM4B,WAAW,CAAEC,OAAQpB,EAAeqB,KAAMnB,KAL9CK,GAAU,SAAAe,GAAS,kCAAUA,GAAV,IAAqBjB,WAAW,OALnDE,GAAU,SAAAe,GAAS,kCAAUA,GAAV,IAAqBlB,aAAa,QAiCnD,UAGGb,EAAMgC,WACL,qBAAK/B,UAAWC,IAAQ+B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAKjC,UAAWC,IAAQiC,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBACEC,KAAK,OACLC,GAAG,SACHrC,UAAWc,EAAOF,YAAc,QAAU,GAC1C0B,MAAO9B,EACP+B,SApCkB,SAAChB,GAC7Bd,EAAiBc,EAAMiB,OAAOF,OAC9BvB,GAAU,SAAAe,GAAS,kCAAUA,GAAV,IAAqBlB,aAAa,OACrDL,GAAc,SAoCR,sBAAKP,UAAWC,IAAQiC,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BACEE,GAAG,OACHI,KAAK,IACLzC,UAAWc,EAAOD,UAAY,QAAU,GACxCyB,MAAO5B,EACP6B,SAzCgB,SAAChB,GAC3BZ,EAAeY,EAAMiB,OAAOF,OAC5BvB,GAAU,SAAAe,GAAS,kCAAUA,GAAV,IAAqBjB,WAAW,OACnDN,GAAc,SAyCR,qBAAKP,UAAWC,IAAQyC,QAAxB,SACE,wBAAQ1C,UAAU,MAAlB,kC,gBCtDG2C,UAxBf,WACI,IAAMC,EAAUC,cAChB,EAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAYrB,OAVAC,qBAAU,WACS,cAAXD,GACAL,EAAQO,KAAK,aAElB,CAACF,EAAQL,IAOR,8BACI,cAAC,EAAD,CACIb,UAAsB,YAAXkB,EACXtB,WARY,SAACyB,GACrBJ,EAAYI","file":"static/js/6.c3a8de16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1Sawl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2q7NW\",\"loading\":\"QuoteForm_loading__1CYEW\",\"control\":\"QuoteForm_control__IuGsW\",\"actions\":\"QuoteForm_actions__1oWi7\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const [enteredAuthor, setEnteredAuthor] = useState('');\n  const [enteredText, setEnteredText] = useState('');\n  const [errors, setErrors] = useState({\n    authorInput: false,\n    textInput: false\n  });\n\n  console.log(errors);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    if (enteredAuthor.trim().length === 0) {\n      setErrors(prevState => ({ ...prevState, authorInput: true }));\n      return;\n    }\n\n    if (enteredText.trim().length === 0) {\n      setErrors(prevState => ({ ...prevState, textInput: true }));\n      return;\n    }\n\n    setIsEntering(false);\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const onChangeAuthorHandler = (event) => {\n    setEnteredAuthor(event.target.value);\n    setErrors(prevState => ({ ...prevState, authorInput: false }));\n    setIsEntering(true);\n  }\n  const onChangeTextHandler = (event) => {\n    setEnteredText(event.target.value);\n    setErrors(prevState => ({ ...prevState, textInput: false }));\n    setIsEntering(true);\n  }\n\n  return (\n    <>\n      <Prompt\n        when={isEntering}\n        message={(location) => (\n          `Are you sure you want to live? All your entered data will be lost.`\n        )}\n      />\n      <Card>\n        <form\n          className={classes.form} onSubmit={submitFormHandler}>\n\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input\n              type='text'\n              id='author'\n              className={errors.authorInput ? 'error' : ''}\n              value={enteredAuthor}\n              onChange={onChangeAuthorHandler}\n            />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea\n              id='text'\n              rows='5'\n              className={errors.textInput ? 'error' : ''}\n              value={enteredText}\n              onChange={onChangeTextHandler}>\n            </textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport QuoteForm from '../components/quotes/QuoteForm'\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nfunction NewQuote() {\r\n    const history = useHistory();\r\n    const { sendRequest, status } = useHttp(addQuote);\r\n\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history])\r\n\r\n    const addQuoteHandler = (quoteData) => {\r\n        sendRequest(quoteData);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <QuoteForm\r\n                isLoading={status === 'pending'}\r\n                onAddQuote={addQuoteHandler}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewQuote"],"sourceRoot":""}